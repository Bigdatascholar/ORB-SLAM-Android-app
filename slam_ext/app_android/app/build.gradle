apply plugin: 'com.android.application'

android {

    compileSdkVersion 22
    buildToolsVersion "22.0.1"
    defaultConfig {
        applicationId "com.viewtwoo"
        minSdkVersion 14
        targetSdkVersion 22
        ndk {
            moduleName "mixed_sample"
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
        debug {
            debuggable true
            jniDebuggable true
        }
    }
    sourceSets.main {
        jniLibs.srcDir 'src/main/libs' //set .so files location to libs
        jni.srcDirs = [] //disable automatic ndk-build call
    }
    // call regular ndk-build(.cmd) script from app directory
    task ndkBuild(type: Exec) {
        def ndkDir = project.plugins.findPlugin('com.android.application').sdkHandler.getNdkFolder()

        commandLine "$ndkDir/ndk-build",
                'NDK_MODULE_PATH=../modules',
                //'NDK_DEBUG=0',
                //'APP_ABI=armeabi-v7a',
                //'APP_CFLAGS=-mapcs-frame',
                'NDK_PROJECT_PATH=build/intermediates/ndk',
                'NDK_LIBS_OUT=src/main/libs',
                'APP_BUILD_SCRIPT=src/main/jni/Android.mk',
                'NDK_APPLICATION_MK=src/main/jni/Application.mk'

        //commandLine 'cp', '-a', '-r', '/mnt/Documents/Developing/ViewTwoo/CLion_workspace/Viewtwoo/viewtwoo/viewtwoo/Viewtwoo-Architecture/assets/.', file('src/main/assets').absolutePath + '/'
        //commandLine 'cp', '/mnt/Documents/Developing/ViewTwoo/CLion_workspace/Viewtwoo/viewtwoo/viewtwoo/Viewtwoo-Architecture/bin/android/release/libViewtwoo-Architecture.so', file('src/main/libs').absolutePath + '/armeabi-v7a/libmain.so'
        //commandLine 'cp', '-a', project(':dlopen').file('src/main/jniLibs').absolutePath + '/.', file('src/main/jniLibs').absolutePath + '/'
        //commandLine 'cp', '-a', file('minkoCubesLib').absolutePath + '/.', file('src/main/jniLibs').absolutePath + '/'


    }
    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn ndkBuild
    }
    productFlavors {
    }
}


dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(':openCVLibrary2411')
    compile project(':dlopen')
}
